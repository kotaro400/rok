version: 2.1

executors:
  default:
    working_directory: ~/rok
    docker:
      - image: circleci/ruby:2.6.5-node-browsers
        environment:
          RAILS_ENV: test
          BUNDLER_VERSION: 2.1.4
          DB_HOST: 127.0.0.1
          DB_USERNAME: 'root'
          DB_PASSWORD: ''
          DB_PORT: 3306
      - image: circleci/mysql:5.7
        environment:
          MYSQL_USER: 'root'
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_ROOT_PASSWORD: ''

commands:
  setup:
    steps:
      - checkout
      - run:
          name: Update bundler
          command: gem update bundler

      - run:
          name: Which bundler?
          command: bundle -v

      - restore_cache:
          keys:
            - gem-cache-v1-{{ checksum "Gemfile.lock" }}
            - gem-cache-v1-

      - run:
          name: Bundle Install
          command: bundle check --path vendor/bundle || bundle install --deployment

      - save_cache:
          key: gem-cache-v1-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - restore_cache:
          keys:
            - yarn-cache-v1-{{ checksum "yarn.lock" }}
            - yarn-cache-v1-

      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn

      - save_cache:
          key: yarn-cache-v1-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

jobs:
  test:
    executor: default
    steps:
      - checkout
      - setup
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 1m

      - run:
          name: Database create
          command: bundle exec rails db:drop db:create

      - run:
          name: Database migrate
          command: bundle exec rails db:schema:load --trace

      - run:
          name: Database seed
          command: bundle exec rails db:seed

      - run:
          name: Rails Test
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"

            bundle exec rspec --format progress \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec.xml \
                            --format progress \
                            $TEST_FILES

workflows:
  build_and_test:
    jobs:
      - test
